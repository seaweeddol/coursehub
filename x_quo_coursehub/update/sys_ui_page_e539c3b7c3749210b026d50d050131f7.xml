<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_page">
    <sys_ui_page action="INSERT_OR_UPDATE">
        <category>general</category>
        <client_script><![CDATA[var currentUser;

function setCurrentUser() {
    var selection = document.getElementById("learners");
    var user = selection.options[selection.selectedIndex].value;
    currentUser = user;
}

function populateLearnerOptions() {
    var requestBody = "";
    var parsedResponse;

    var client = new XMLHttpRequest();
    client.open("get", "https://dev201115.service-now.com/api/now/table/x_quo_coursehub_learner?sysparm_fields=user_account");

    client.setRequestHeader('Accept', 'application/json');
    client.setRequestHeader('Content-Type', 'application/json');

    //Eg. UserName="admin", Password="admin" for this code sample.
    client.setRequestHeader('Authorization', 'Basic ' + btoa('admin' + ':' + 'mE7QuyPj3=K!'));

    client.onreadystatechange = function() {
        if (this.readyState == this.DONE) {
            parsedResponse = JSON.parse(this.response)["result"];
            var learners = document.getElementById("learners");

            for (const learner of parsedResponse) {
                var option = document.createElement('option');
                option.text = option.value = learner.user_account.value;
                learners.add(option, 0);
            }

            // TODO: debug why option.text is set before getLearnerName() finishes getting response
            // var learnerOptions = document.getElementById("learners").options;
            // var length = learnerOptions.length;
            // console.log(length);
            // for (let index = 0; index <= length; index++) {
            //     console.log(learnerOptions[index].text);
            //     var learnerName = getLearnerName(learnerOptions[index].value);
            //     console.log("learnerName = " + learnerName);

            //     option.text = learnerName;
            //     console.log("option.text = " + option.text);
            // }
        }
    };
    client.send(requestBody);
}

// TODO: update dropdown learner IDs to names
function getLearnerName(userAccountValue) {
    var requestBody = "";
    var name;

    var client = new XMLHttpRequest();

    client.open("get", "https://dev201115.service-now.com/api/now/table/sys_user?sysparm_fields=name&sys_id=" + userAccountValue);

    client.setRequestHeader('Accept', 'application/json');
    client.setRequestHeader('Content-Type', 'application/json');

    //Eg. UserName="admin", Password="admin" for this code sample.
    client.setRequestHeader('Authorization', 'Basic ' + btoa('admin' + ':' + 'mE7QuyPj3=K!'));

    client.onreadystatechange = function() {
        if (this.readyState == this.DONE) {
            name = JSON.parse(this.response)["result"][0].name;
            console.log(name)
            return name;
        }
    };
    client.send(requestBody);
}

function displayCourseDetails(data) {
    var table = document.getElementById("course-list-table");
    var row = table.insertRow();

    row.insertCell().innerHTML = data.title;
    row.insertCell().innerHTML = data.description;
    row.insertCell().innerHTML = data.duration;

    var a = document.createElement('a');
    var linkText = document.createTextNode("Subscribe");
    a.appendChild(linkText);
    a.title = "Subscribe";
    a.href = "http://example.com";
    row.insertCell().appendChild(a);
}

function subscribeToCourse() {
    // if currentUser is not null, 
}

// TODO parse course duration
// TODO encrypt/obscure authorization

var requestBody = "";
var parsedResponse;

var client = new XMLHttpRequest();
client.open("get", "https://dev201115.service-now.com/api/now/table/x_quo_coursehub_course?sysparm_fields=duration%2Ctitle%2Cdescription");

client.setRequestHeader('Accept', 'application/json');
client.setRequestHeader('Content-Type', 'application/json');

//Eg. UserName="admin", Password="admin" for this code sample.
client.setRequestHeader('Authorization', 'Basic ' + btoa('admin' + ':' + 'mE7QuyPj3=K!'));

client.onreadystatechange = function() {
    if (this.readyState == this.DONE) {
        parsedResponse = JSON.parse(this.response)["result"];
        for (const course of parsedResponse) {
            displayCourseDetails(course);
        }
    }
};

client.send(requestBody);

populateLearnerOptions();]]></client_script>
        <description/>
        <direct>false</direct>
        <endpoint>x_quo_coursehub_course-list.do</endpoint>
        <html><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null">
    <style>
        table {
            font-family: arial, sans-serif;
            border-collapse: collapse;
            width: 100%;
        }

        td,
        th {
            border: 1px solid #dddddd;
            text-align: left;
            padding: 8px;
        }

        tr:nth-child(even) {
            background-color: #dddddd;
        }
    </style>

    <body>

        <label for="learners">Active Learner: </label>

        <select name="learners" id="learners">
        </select>

        <button type="button" onclick="setCurrentUser()">Set Current Learner</button>

        <table id="course-list-table">
            <tr>
                <th>Course Title</th>
                <th>Course Description</th>
                <th>Course Duration</th>
                <th>Subscribe to Course</th>
            </tr>
        </table>
        <header>

        </header>

        <section>

        </section>

        <script>

        </script>
    </body>
</j:jelly>]]></html>
        <name>course-list</name>
        <processing_script/>
        <sys_class_name>sys_ui_page</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-29 13:46:03</sys_created_on>
        <sys_id>e539c3b7c3749210b026d50d050131f7</sys_id>
        <sys_mod_count>101</sys_mod_count>
        <sys_name>course-list</sys_name>
        <sys_package display_value="CourseHub" source="x_quo_coursehub">d7affc501bf0ded0afce657a234bcb67</sys_package>
        <sys_policy/>
        <sys_scope display_value="CourseHub">d7affc501bf0ded0afce657a234bcb67</sys_scope>
        <sys_update_name>sys_ui_page_e539c3b7c3749210b026d50d050131f7</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-29 17:39:03</sys_updated_on>
    </sys_ui_page>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>e539c3b7c3749210b026d50d050131f7</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-29 13:46:02</sys_created_on>
        <sys_id>451a47f7c3749210b026d50d050131e5</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-29 13:46:02</sys_updated_on>
        <table>sys_ui_page</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>
